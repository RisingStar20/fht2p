name: CI

on: [push, pull_request]

# https://github.com/marketplace/actions/rust-toolchain
jobs:
  Check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Install stable Rust rustfmt
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: rustfmt

      - name: Format
        run: cargo fmt -- --check

  Linux:
    name: Linux ubuntu-latest
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Install stable Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable

      - name: Update
        run: |
          rustc -V 
          rustup update --no-self-update stable 
          rustup default stable
          rustc -V

      - name: Build
        run: |
          cargo build --release
          ls -lah target/release
      - name: Tests
        run: cargo test --release -- --nocapture

  MacOS:
    name: MacOS-latest
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v1
      - name: Install stable Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable

      - name: Update
        run: |
          rustc -V 
          rustup update --no-self-update stable 
          rustup default stable
          rustc -V

      - name: Build
        run: |
          cargo build --release
          ls -lah target/release
      - name: Tests
        run: cargo test --release -- --nocapture

  Windows:
    name: Windows ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest]
        rust: [stable]
    steps:
      - uses: actions/checkout@v1
      - name: Install ${{ matrix.rust }}
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          profile: minimal
          override: true

      - name: Update
        run: rustc -V

      - name: Build
        run: |
          cargo build --release
          ls target/release
      - name: Tests
        run: cargo test --release -- --nocapture
# windows can't update because of a error:
# info: using existing install for 'stable-x86_64-pc-windows-msvc'
##[error]Process completed with exit code 1
